// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Rocket.Surgery.OnePasswordNativeUnoffical
{
    public static class GetAPICredential
    {
        public static Task<GetAPICredentialResult> InvokeAsync(GetAPICredentialArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAPICredentialResult>("one-password-native-unoffical:index:GetAPICredential", args ?? new GetAPICredentialArgs(), options.WithDefaults());

        public static Output<GetAPICredentialResult> Invoke(GetAPICredentialInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAPICredentialResult>("one-password-native-unoffical:index:GetAPICredential", args ?? new GetAPICredentialInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAPICredentialArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
        /// </summary>
        [Input("title")]
        public string? Title { get; set; }

        /// <summary>
        /// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
        /// </summary>
        [Input("uuid")]
        public string? Uuid { get; set; }

        /// <summary>
        /// The UUID of the vault the item is in.
        /// </summary>
        [Input("vault", required: true)]
        public string Vault { get; set; } = null!;

        public GetAPICredentialArgs()
        {
        }
    }

    public sealed class GetAPICredentialInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// The UUID of the vault the item is in.
        /// </summary>
        [Input("vault", required: true)]
        public Input<string> Vault { get; set; } = null!;

        public GetAPICredentialInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAPICredentialResult
    {
        public readonly ImmutableDictionary<string, Outputs.OutputAttachment> Attachments;
        public readonly string Category;
        public readonly string? Credential;
        public readonly string? Expires;
        public readonly ImmutableDictionary<string, Outputs.OutputField> Fields;
        public readonly string? Filename;
        public readonly string? Hostname;
        public readonly string? Notes;
        public readonly ImmutableArray<Outputs.OutputReference> References;
        public readonly ImmutableDictionary<string, Outputs.OutputSection> Sections;
        /// <summary>
        /// An array of strings of the tags assigned to the item.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The title of the item.
        /// </summary>
        public readonly string Title;
        public readonly string? Type;
        public readonly ImmutableArray<Outputs.OutputUrl> Urls;
        public readonly string? Username;
        /// <summary>
        /// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
        /// </summary>
        public readonly string Uuid;
        public readonly string? ValidFrom;
        public readonly ImmutableDictionary<string, string> Vault;

        [OutputConstructor]
        private GetAPICredentialResult(
            ImmutableDictionary<string, Outputs.OutputAttachment> attachments,

            string category,

            string? credential,

            string? expires,

            ImmutableDictionary<string, Outputs.OutputField> fields,

            string? filename,

            string? hostname,

            string? notes,

            ImmutableArray<Outputs.OutputReference> references,

            ImmutableDictionary<string, Outputs.OutputSection> sections,

            ImmutableArray<string> tags,

            string title,

            string? type,

            ImmutableArray<Outputs.OutputUrl> urls,

            string? username,

            string uuid,

            string? validFrom,

            ImmutableDictionary<string, string> vault)
        {
            Attachments = attachments;
            Category = category;
            Credential = credential;
            Expires = expires;
            Fields = fields;
            Filename = filename;
            Hostname = hostname;
            Notes = notes;
            References = references;
            Sections = sections;
            Tags = tags;
            Title = title;
            Type = type;
            Urls = urls;
            Username = username;
            Uuid = uuid;
            ValidFrom = validFrom;
            Vault = vault;
        }
    }
}
