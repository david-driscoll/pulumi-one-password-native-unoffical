// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Rocket.Surgery.OnePasswordNativeUnofficial
{
    public static class Inject
    {
        public static Task<InjectResult> InvokeAsync(InjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<InjectResult>("one-password-native-unofficial:index:Inject", args ?? new InjectArgs(), options.WithDefaults());

        public static Output<InjectResult> Invoke(InjectInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<InjectResult>("one-password-native-unofficial:index:Inject", args ?? new InjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class InjectArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The template that you want transformed with secrets
        /// </summary>
        [Input("template", required: true)]
        public string Template { get; set; } = null!;

        public InjectArgs()
        {
        }
    }

    public sealed class InjectInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The template that you want transformed with secrets
        /// </summary>
        [Input("template", required: true)]
        public Input<string> Template { get; set; } = null!;

        public InjectInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class InjectResult
    {
        public readonly string? Result;

        [OutputConstructor]
        private InjectResult(string? result)
        {
            Result = result;
        }
    }
}
