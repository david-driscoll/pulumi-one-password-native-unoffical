// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Rocket.Surgery.OnePasswordNativeUnoffical
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("one-password-native-unoffical");

        private static readonly __Value<string?> _connectHost = new __Value<string?>(() => __config.Get("connectHost"));
        public static string? ConnectHost
        {
            get => _connectHost.Get();
            set => _connectHost.Set(value);
        }

        private static readonly __Value<string?> _connectToken = new __Value<string?>(() => __config.Get("connectToken"));
        public static string? ConnectToken
        {
            get => _connectToken.Get();
            set => _connectToken.Set(value);
        }

        private static readonly __Value<string?> _serviceAccountToken = new __Value<string?>(() => __config.Get("serviceAccountToken"));
        public static string? ServiceAccountToken
        {
            get => _serviceAccountToken.Get();
            set => _serviceAccountToken.Set(value);
        }

    }
}
