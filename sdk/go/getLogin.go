// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pulumi_one_password_native_unoffical

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetLogin(ctx *pulumi.Context, args *GetLoginArgs, opts ...pulumi.InvokeOption) (*GetLoginResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetLoginResult
	err := ctx.Invoke("one-password-native-unoffical:index:GetLogin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetLoginArgs struct {
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title *string `pulumi:"title"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid *string `pulumi:"uuid"`
	// The UUID of the vault the item is in.
	Vault string `pulumi:"vault"`
}

type GetLoginResult struct {
	Attachments map[string]OutputAttachment `pulumi:"attachments"`
	Category    string                      `pulumi:"category"`
	Fields      map[string]OutputField      `pulumi:"fields"`
	Notes       *string                     `pulumi:"notes"`
	Password    *string                     `pulumi:"password"`
	References  []OutputReference           `pulumi:"references"`
	Sections    map[string]OutputSection    `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags []string `pulumi:"tags"`
	// The title of the item.
	Title    string      `pulumi:"title"`
	Urls     []OutputUrl `pulumi:"urls"`
	Username *string     `pulumi:"username"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid  string            `pulumi:"uuid"`
	Vault map[string]string `pulumi:"vault"`
}

func GetLoginOutput(ctx *pulumi.Context, args GetLoginOutputArgs, opts ...pulumi.InvokeOption) GetLoginResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLoginResult, error) {
			args := v.(GetLoginArgs)
			r, err := GetLogin(ctx, &args, opts...)
			var s GetLoginResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLoginResultOutput)
}

type GetLoginOutputArgs struct {
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	// The UUID of the vault the item is in.
	Vault pulumi.StringInput `pulumi:"vault"`
}

func (GetLoginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginArgs)(nil)).Elem()
}

type GetLoginResultOutput struct{ *pulumi.OutputState }

func (GetLoginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoginResult)(nil)).Elem()
}

func (o GetLoginResultOutput) ToGetLoginResultOutput() GetLoginResultOutput {
	return o
}

func (o GetLoginResultOutput) ToGetLoginResultOutputWithContext(ctx context.Context) GetLoginResultOutput {
	return o
}

func (o GetLoginResultOutput) Attachments() OutputAttachmentMapOutput {
	return o.ApplyT(func(v GetLoginResult) map[string]OutputAttachment { return v.Attachments }).(OutputAttachmentMapOutput)
}

func (o GetLoginResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoginResult) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetLoginResultOutput) Fields() OutputFieldMapOutput {
	return o.ApplyT(func(v GetLoginResult) map[string]OutputField { return v.Fields }).(OutputFieldMapOutput)
}

func (o GetLoginResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLoginResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o GetLoginResultOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLoginResult) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetLoginResultOutput) References() OutputReferenceArrayOutput {
	return o.ApplyT(func(v GetLoginResult) []OutputReference { return v.References }).(OutputReferenceArrayOutput)
}

func (o GetLoginResultOutput) Sections() OutputSectionMapOutput {
	return o.ApplyT(func(v GetLoginResult) map[string]OutputSection { return v.Sections }).(OutputSectionMapOutput)
}

// An array of strings of the tags assigned to the item.
func (o GetLoginResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoginResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The title of the item.
func (o GetLoginResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoginResult) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetLoginResultOutput) Urls() OutputUrlArrayOutput {
	return o.ApplyT(func(v GetLoginResult) []OutputUrl { return v.Urls }).(OutputUrlArrayOutput)
}

func (o GetLoginResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLoginResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
func (o GetLoginResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoginResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func (o GetLoginResultOutput) Vault() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetLoginResult) map[string]string { return v.Vault }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLoginResultOutput{})
}
