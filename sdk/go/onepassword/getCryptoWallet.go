// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"context"
	"reflect"

	"github.com/Sacro/pulumi-onepassword/sdk/go/onepassword/cryptowallet"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCryptoWallet(ctx *pulumi.Context, args *GetCryptoWalletArgs, opts ...pulumi.InvokeOption) (*GetCryptoWalletResult, error) {
	var rv GetCryptoWalletResult
	err := ctx.Invoke("one-password-native:index:GetCryptoWallet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetCryptoWalletArgs struct {
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title *string `pulumi:"title"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid *string `pulumi:"uuid"`
	// The UUID of the vault the item is in.
	Vault string `pulumi:"vault"`
}

type GetCryptoWalletResult struct {
	Attachments    map[string]OutField   `pulumi:"attachments"`
	Category       string                `pulumi:"category"`
	Fields         map[string]OutField   `pulumi:"fields"`
	Notes          *string               `pulumi:"notes"`
	Password       *string               `pulumi:"password"`
	RecoveryPhrase *string               `pulumi:"recoveryPhrase"`
	References     map[string]OutField   `pulumi:"references"`
	Sections       map[string]OutSection `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags []string `pulumi:"tags"`
	// The title of the item.
	Title string `pulumi:"title"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid string `pulumi:"uuid"`
	// The UUID of the vault the item is in.
	Vault  string                      `pulumi:"vault"`
	Wallet *cryptowallet.WalletSection `pulumi:"wallet"`
}

func GetCryptoWalletOutput(ctx *pulumi.Context, args GetCryptoWalletOutputArgs, opts ...pulumi.InvokeOption) GetCryptoWalletResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCryptoWalletResult, error) {
			args := v.(GetCryptoWalletArgs)
			r, err := GetCryptoWallet(ctx, &args, opts...)
			var s GetCryptoWalletResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCryptoWalletResultOutput)
}

type GetCryptoWalletOutputArgs struct {
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	// The UUID of the vault the item is in.
	Vault pulumi.StringInput `pulumi:"vault"`
}

func (GetCryptoWalletOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCryptoWalletArgs)(nil)).Elem()
}

type GetCryptoWalletResultOutput struct{ *pulumi.OutputState }

func (GetCryptoWalletResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCryptoWalletResult)(nil)).Elem()
}

func (o GetCryptoWalletResultOutput) ToGetCryptoWalletResultOutput() GetCryptoWalletResultOutput {
	return o
}

func (o GetCryptoWalletResultOutput) ToGetCryptoWalletResultOutputWithContext(ctx context.Context) GetCryptoWalletResultOutput {
	return o
}

func (o GetCryptoWalletResultOutput) Attachments() OutFieldMapOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) map[string]OutField { return v.Attachments }).(OutFieldMapOutput)
}

func (o GetCryptoWalletResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetCryptoWalletResultOutput) Fields() OutFieldMapOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) map[string]OutField { return v.Fields }).(OutFieldMapOutput)
}

func (o GetCryptoWalletResultOutput) Notes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) *string { return v.Notes }).(pulumi.StringPtrOutput)
}

func (o GetCryptoWalletResultOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetCryptoWalletResultOutput) RecoveryPhrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) *string { return v.RecoveryPhrase }).(pulumi.StringPtrOutput)
}

func (o GetCryptoWalletResultOutput) References() OutFieldMapOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) map[string]OutField { return v.References }).(OutFieldMapOutput)
}

func (o GetCryptoWalletResultOutput) Sections() OutSectionMapOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) map[string]OutSection { return v.Sections }).(OutSectionMapOutput)
}

// An array of strings of the tags assigned to the item.
func (o GetCryptoWalletResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The title of the item.
func (o GetCryptoWalletResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) string { return v.Title }).(pulumi.StringOutput)
}

// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
func (o GetCryptoWalletResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) string { return v.Uuid }).(pulumi.StringOutput)
}

// The UUID of the vault the item is in.
func (o GetCryptoWalletResultOutput) Vault() pulumi.StringOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) string { return v.Vault }).(pulumi.StringOutput)
}

func (o GetCryptoWalletResultOutput) Wallet() cryptowallet.WalletSectionPtrOutput {
	return o.ApplyT(func(v GetCryptoWalletResult) *cryptowallet.WalletSection { return v.Wallet }).(cryptowallet.WalletSectionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCryptoWalletResultOutput{})
}
