// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package medicalrecord

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MedicationSection struct {
	Dosage          *string `pulumi:"dosage"`
	Medication      *string `pulumi:"medication"`
	MedicationNotes *string `pulumi:"medicationNotes"`
}

// MedicationSectionInput is an input type that accepts MedicationSectionArgs and MedicationSectionOutput values.
// You can construct a concrete instance of `MedicationSectionInput` via:
//
//	MedicationSectionArgs{...}
type MedicationSectionInput interface {
	pulumi.Input

	ToMedicationSectionOutput() MedicationSectionOutput
	ToMedicationSectionOutputWithContext(context.Context) MedicationSectionOutput
}

type MedicationSectionArgs struct {
	Dosage          pulumi.StringPtrInput `pulumi:"dosage"`
	Medication      pulumi.StringPtrInput `pulumi:"medication"`
	MedicationNotes pulumi.StringPtrInput `pulumi:"medicationNotes"`
}

func (MedicationSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MedicationSection)(nil)).Elem()
}

func (i MedicationSectionArgs) ToMedicationSectionOutput() MedicationSectionOutput {
	return i.ToMedicationSectionOutputWithContext(context.Background())
}

func (i MedicationSectionArgs) ToMedicationSectionOutputWithContext(ctx context.Context) MedicationSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedicationSectionOutput)
}

func (i MedicationSectionArgs) ToMedicationSectionPtrOutput() MedicationSectionPtrOutput {
	return i.ToMedicationSectionPtrOutputWithContext(context.Background())
}

func (i MedicationSectionArgs) ToMedicationSectionPtrOutputWithContext(ctx context.Context) MedicationSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedicationSectionOutput).ToMedicationSectionPtrOutputWithContext(ctx)
}

// MedicationSectionPtrInput is an input type that accepts MedicationSectionArgs, MedicationSectionPtr and MedicationSectionPtrOutput values.
// You can construct a concrete instance of `MedicationSectionPtrInput` via:
//
//	        MedicationSectionArgs{...}
//
//	or:
//
//	        nil
type MedicationSectionPtrInput interface {
	pulumi.Input

	ToMedicationSectionPtrOutput() MedicationSectionPtrOutput
	ToMedicationSectionPtrOutputWithContext(context.Context) MedicationSectionPtrOutput
}

type medicationSectionPtrType MedicationSectionArgs

func MedicationSectionPtr(v *MedicationSectionArgs) MedicationSectionPtrInput {
	return (*medicationSectionPtrType)(v)
}

func (*medicationSectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MedicationSection)(nil)).Elem()
}

func (i *medicationSectionPtrType) ToMedicationSectionPtrOutput() MedicationSectionPtrOutput {
	return i.ToMedicationSectionPtrOutputWithContext(context.Background())
}

func (i *medicationSectionPtrType) ToMedicationSectionPtrOutputWithContext(ctx context.Context) MedicationSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedicationSectionPtrOutput)
}

type MedicationSectionOutput struct{ *pulumi.OutputState }

func (MedicationSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MedicationSection)(nil)).Elem()
}

func (o MedicationSectionOutput) ToMedicationSectionOutput() MedicationSectionOutput {
	return o
}

func (o MedicationSectionOutput) ToMedicationSectionOutputWithContext(ctx context.Context) MedicationSectionOutput {
	return o
}

func (o MedicationSectionOutput) ToMedicationSectionPtrOutput() MedicationSectionPtrOutput {
	return o.ToMedicationSectionPtrOutputWithContext(context.Background())
}

func (o MedicationSectionOutput) ToMedicationSectionPtrOutputWithContext(ctx context.Context) MedicationSectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MedicationSection) *MedicationSection {
		return &v
	}).(MedicationSectionPtrOutput)
}

func (o MedicationSectionOutput) Dosage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MedicationSection) *string { return v.Dosage }).(pulumi.StringPtrOutput)
}

func (o MedicationSectionOutput) Medication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MedicationSection) *string { return v.Medication }).(pulumi.StringPtrOutput)
}

func (o MedicationSectionOutput) MedicationNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MedicationSection) *string { return v.MedicationNotes }).(pulumi.StringPtrOutput)
}

type MedicationSectionPtrOutput struct{ *pulumi.OutputState }

func (MedicationSectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MedicationSection)(nil)).Elem()
}

func (o MedicationSectionPtrOutput) ToMedicationSectionPtrOutput() MedicationSectionPtrOutput {
	return o
}

func (o MedicationSectionPtrOutput) ToMedicationSectionPtrOutputWithContext(ctx context.Context) MedicationSectionPtrOutput {
	return o
}

func (o MedicationSectionPtrOutput) Elem() MedicationSectionOutput {
	return o.ApplyT(func(v *MedicationSection) MedicationSection {
		if v != nil {
			return *v
		}
		var ret MedicationSection
		return ret
	}).(MedicationSectionOutput)
}

func (o MedicationSectionPtrOutput) Dosage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedicationSection) *string {
		if v == nil {
			return nil
		}
		return v.Dosage
	}).(pulumi.StringPtrOutput)
}

func (o MedicationSectionPtrOutput) Medication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedicationSection) *string {
		if v == nil {
			return nil
		}
		return v.Medication
	}).(pulumi.StringPtrOutput)
}

func (o MedicationSectionPtrOutput) MedicationNotes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedicationSection) *string {
		if v == nil {
			return nil
		}
		return v.MedicationNotes
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MedicationSectionInput)(nil)).Elem(), MedicationSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MedicationSectionPtrInput)(nil)).Elem(), MedicationSectionArgs{})
	pulumi.RegisterOutputType(MedicationSectionOutput{})
	pulumi.RegisterOutputType(MedicationSectionPtrOutput{})
}
