// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package softwarelicense

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomerSection struct {
	Company         *string `pulumi:"company"`
	LicensedTo      *string `pulumi:"licensedTo"`
	RegisteredEmail *string `pulumi:"registeredEmail"`
}

// CustomerSectionInput is an input type that accepts CustomerSectionArgs and CustomerSectionOutput values.
// You can construct a concrete instance of `CustomerSectionInput` via:
//
//	CustomerSectionArgs{...}
type CustomerSectionInput interface {
	pulumi.Input

	ToCustomerSectionOutput() CustomerSectionOutput
	ToCustomerSectionOutputWithContext(context.Context) CustomerSectionOutput
}

type CustomerSectionArgs struct {
	Company         pulumi.StringPtrInput `pulumi:"company"`
	LicensedTo      pulumi.StringPtrInput `pulumi:"licensedTo"`
	RegisteredEmail pulumi.StringPtrInput `pulumi:"registeredEmail"`
}

func (CustomerSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSection)(nil)).Elem()
}

func (i CustomerSectionArgs) ToCustomerSectionOutput() CustomerSectionOutput {
	return i.ToCustomerSectionOutputWithContext(context.Background())
}

func (i CustomerSectionArgs) ToCustomerSectionOutputWithContext(ctx context.Context) CustomerSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSectionOutput)
}

func (i CustomerSectionArgs) ToCustomerSectionPtrOutput() CustomerSectionPtrOutput {
	return i.ToCustomerSectionPtrOutputWithContext(context.Background())
}

func (i CustomerSectionArgs) ToCustomerSectionPtrOutputWithContext(ctx context.Context) CustomerSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSectionOutput).ToCustomerSectionPtrOutputWithContext(ctx)
}

// CustomerSectionPtrInput is an input type that accepts CustomerSectionArgs, CustomerSectionPtr and CustomerSectionPtrOutput values.
// You can construct a concrete instance of `CustomerSectionPtrInput` via:
//
//	        CustomerSectionArgs{...}
//
//	or:
//
//	        nil
type CustomerSectionPtrInput interface {
	pulumi.Input

	ToCustomerSectionPtrOutput() CustomerSectionPtrOutput
	ToCustomerSectionPtrOutputWithContext(context.Context) CustomerSectionPtrOutput
}

type customerSectionPtrType CustomerSectionArgs

func CustomerSectionPtr(v *CustomerSectionArgs) CustomerSectionPtrInput {
	return (*customerSectionPtrType)(v)
}

func (*customerSectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerSection)(nil)).Elem()
}

func (i *customerSectionPtrType) ToCustomerSectionPtrOutput() CustomerSectionPtrOutput {
	return i.ToCustomerSectionPtrOutputWithContext(context.Background())
}

func (i *customerSectionPtrType) ToCustomerSectionPtrOutputWithContext(ctx context.Context) CustomerSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerSectionPtrOutput)
}

type CustomerSectionOutput struct{ *pulumi.OutputState }

func (CustomerSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomerSection)(nil)).Elem()
}

func (o CustomerSectionOutput) ToCustomerSectionOutput() CustomerSectionOutput {
	return o
}

func (o CustomerSectionOutput) ToCustomerSectionOutputWithContext(ctx context.Context) CustomerSectionOutput {
	return o
}

func (o CustomerSectionOutput) ToCustomerSectionPtrOutput() CustomerSectionPtrOutput {
	return o.ToCustomerSectionPtrOutputWithContext(context.Background())
}

func (o CustomerSectionOutput) ToCustomerSectionPtrOutputWithContext(ctx context.Context) CustomerSectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomerSection) *CustomerSection {
		return &v
	}).(CustomerSectionPtrOutput)
}

func (o CustomerSectionOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSection) *string { return v.Company }).(pulumi.StringPtrOutput)
}

func (o CustomerSectionOutput) LicensedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSection) *string { return v.LicensedTo }).(pulumi.StringPtrOutput)
}

func (o CustomerSectionOutput) RegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomerSection) *string { return v.RegisteredEmail }).(pulumi.StringPtrOutput)
}

type CustomerSectionPtrOutput struct{ *pulumi.OutputState }

func (CustomerSectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerSection)(nil)).Elem()
}

func (o CustomerSectionPtrOutput) ToCustomerSectionPtrOutput() CustomerSectionPtrOutput {
	return o
}

func (o CustomerSectionPtrOutput) ToCustomerSectionPtrOutputWithContext(ctx context.Context) CustomerSectionPtrOutput {
	return o
}

func (o CustomerSectionPtrOutput) Elem() CustomerSectionOutput {
	return o.ApplyT(func(v *CustomerSection) CustomerSection {
		if v != nil {
			return *v
		}
		var ret CustomerSection
		return ret
	}).(CustomerSectionOutput)
}

func (o CustomerSectionPtrOutput) Company() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerSection) *string {
		if v == nil {
			return nil
		}
		return v.Company
	}).(pulumi.StringPtrOutput)
}

func (o CustomerSectionPtrOutput) LicensedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerSection) *string {
		if v == nil {
			return nil
		}
		return v.LicensedTo
	}).(pulumi.StringPtrOutput)
}

func (o CustomerSectionPtrOutput) RegisteredEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerSection) *string {
		if v == nil {
			return nil
		}
		return v.RegisteredEmail
	}).(pulumi.StringPtrOutput)
}

type OrderSection struct {
	OrderNumber  *string `pulumi:"orderNumber"`
	OrderTotal   *string `pulumi:"orderTotal"`
	PurchaseDate *string `pulumi:"purchaseDate"`
}

// OrderSectionInput is an input type that accepts OrderSectionArgs and OrderSectionOutput values.
// You can construct a concrete instance of `OrderSectionInput` via:
//
//	OrderSectionArgs{...}
type OrderSectionInput interface {
	pulumi.Input

	ToOrderSectionOutput() OrderSectionOutput
	ToOrderSectionOutputWithContext(context.Context) OrderSectionOutput
}

type OrderSectionArgs struct {
	OrderNumber  pulumi.StringPtrInput `pulumi:"orderNumber"`
	OrderTotal   pulumi.StringPtrInput `pulumi:"orderTotal"`
	PurchaseDate pulumi.StringPtrInput `pulumi:"purchaseDate"`
}

func (OrderSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderSection)(nil)).Elem()
}

func (i OrderSectionArgs) ToOrderSectionOutput() OrderSectionOutput {
	return i.ToOrderSectionOutputWithContext(context.Background())
}

func (i OrderSectionArgs) ToOrderSectionOutputWithContext(ctx context.Context) OrderSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderSectionOutput)
}

func (i OrderSectionArgs) ToOrderSectionPtrOutput() OrderSectionPtrOutput {
	return i.ToOrderSectionPtrOutputWithContext(context.Background())
}

func (i OrderSectionArgs) ToOrderSectionPtrOutputWithContext(ctx context.Context) OrderSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderSectionOutput).ToOrderSectionPtrOutputWithContext(ctx)
}

// OrderSectionPtrInput is an input type that accepts OrderSectionArgs, OrderSectionPtr and OrderSectionPtrOutput values.
// You can construct a concrete instance of `OrderSectionPtrInput` via:
//
//	        OrderSectionArgs{...}
//
//	or:
//
//	        nil
type OrderSectionPtrInput interface {
	pulumi.Input

	ToOrderSectionPtrOutput() OrderSectionPtrOutput
	ToOrderSectionPtrOutputWithContext(context.Context) OrderSectionPtrOutput
}

type orderSectionPtrType OrderSectionArgs

func OrderSectionPtr(v *OrderSectionArgs) OrderSectionPtrInput {
	return (*orderSectionPtrType)(v)
}

func (*orderSectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderSection)(nil)).Elem()
}

func (i *orderSectionPtrType) ToOrderSectionPtrOutput() OrderSectionPtrOutput {
	return i.ToOrderSectionPtrOutputWithContext(context.Background())
}

func (i *orderSectionPtrType) ToOrderSectionPtrOutputWithContext(ctx context.Context) OrderSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrderSectionPtrOutput)
}

type OrderSectionOutput struct{ *pulumi.OutputState }

func (OrderSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrderSection)(nil)).Elem()
}

func (o OrderSectionOutput) ToOrderSectionOutput() OrderSectionOutput {
	return o
}

func (o OrderSectionOutput) ToOrderSectionOutputWithContext(ctx context.Context) OrderSectionOutput {
	return o
}

func (o OrderSectionOutput) ToOrderSectionPtrOutput() OrderSectionPtrOutput {
	return o.ToOrderSectionPtrOutputWithContext(context.Background())
}

func (o OrderSectionOutput) ToOrderSectionPtrOutputWithContext(ctx context.Context) OrderSectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrderSection) *OrderSection {
		return &v
	}).(OrderSectionPtrOutput)
}

func (o OrderSectionOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderSection) *string { return v.OrderNumber }).(pulumi.StringPtrOutput)
}

func (o OrderSectionOutput) OrderTotal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderSection) *string { return v.OrderTotal }).(pulumi.StringPtrOutput)
}

func (o OrderSectionOutput) PurchaseDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrderSection) *string { return v.PurchaseDate }).(pulumi.StringPtrOutput)
}

type OrderSectionPtrOutput struct{ *pulumi.OutputState }

func (OrderSectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrderSection)(nil)).Elem()
}

func (o OrderSectionPtrOutput) ToOrderSectionPtrOutput() OrderSectionPtrOutput {
	return o
}

func (o OrderSectionPtrOutput) ToOrderSectionPtrOutputWithContext(ctx context.Context) OrderSectionPtrOutput {
	return o
}

func (o OrderSectionPtrOutput) Elem() OrderSectionOutput {
	return o.ApplyT(func(v *OrderSection) OrderSection {
		if v != nil {
			return *v
		}
		var ret OrderSection
		return ret
	}).(OrderSectionOutput)
}

func (o OrderSectionPtrOutput) OrderNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderSection) *string {
		if v == nil {
			return nil
		}
		return v.OrderNumber
	}).(pulumi.StringPtrOutput)
}

func (o OrderSectionPtrOutput) OrderTotal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderSection) *string {
		if v == nil {
			return nil
		}
		return v.OrderTotal
	}).(pulumi.StringPtrOutput)
}

func (o OrderSectionPtrOutput) PurchaseDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrderSection) *string {
		if v == nil {
			return nil
		}
		return v.PurchaseDate
	}).(pulumi.StringPtrOutput)
}

type PublisherSection struct {
	DownloadPage *string `pulumi:"downloadPage"`
	Publisher    *string `pulumi:"publisher"`
	RetailPrice  *string `pulumi:"retailPrice"`
	SupportEmail *string `pulumi:"supportEmail"`
	Website      *string `pulumi:"website"`
}

// PublisherSectionInput is an input type that accepts PublisherSectionArgs and PublisherSectionOutput values.
// You can construct a concrete instance of `PublisherSectionInput` via:
//
//	PublisherSectionArgs{...}
type PublisherSectionInput interface {
	pulumi.Input

	ToPublisherSectionOutput() PublisherSectionOutput
	ToPublisherSectionOutputWithContext(context.Context) PublisherSectionOutput
}

type PublisherSectionArgs struct {
	DownloadPage pulumi.StringPtrInput `pulumi:"downloadPage"`
	Publisher    pulumi.StringPtrInput `pulumi:"publisher"`
	RetailPrice  pulumi.StringPtrInput `pulumi:"retailPrice"`
	SupportEmail pulumi.StringPtrInput `pulumi:"supportEmail"`
	Website      pulumi.StringPtrInput `pulumi:"website"`
}

func (PublisherSectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublisherSection)(nil)).Elem()
}

func (i PublisherSectionArgs) ToPublisherSectionOutput() PublisherSectionOutput {
	return i.ToPublisherSectionOutputWithContext(context.Background())
}

func (i PublisherSectionArgs) ToPublisherSectionOutputWithContext(ctx context.Context) PublisherSectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublisherSectionOutput)
}

func (i PublisherSectionArgs) ToPublisherSectionPtrOutput() PublisherSectionPtrOutput {
	return i.ToPublisherSectionPtrOutputWithContext(context.Background())
}

func (i PublisherSectionArgs) ToPublisherSectionPtrOutputWithContext(ctx context.Context) PublisherSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublisherSectionOutput).ToPublisherSectionPtrOutputWithContext(ctx)
}

// PublisherSectionPtrInput is an input type that accepts PublisherSectionArgs, PublisherSectionPtr and PublisherSectionPtrOutput values.
// You can construct a concrete instance of `PublisherSectionPtrInput` via:
//
//	        PublisherSectionArgs{...}
//
//	or:
//
//	        nil
type PublisherSectionPtrInput interface {
	pulumi.Input

	ToPublisherSectionPtrOutput() PublisherSectionPtrOutput
	ToPublisherSectionPtrOutputWithContext(context.Context) PublisherSectionPtrOutput
}

type publisherSectionPtrType PublisherSectionArgs

func PublisherSectionPtr(v *PublisherSectionArgs) PublisherSectionPtrInput {
	return (*publisherSectionPtrType)(v)
}

func (*publisherSectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublisherSection)(nil)).Elem()
}

func (i *publisherSectionPtrType) ToPublisherSectionPtrOutput() PublisherSectionPtrOutput {
	return i.ToPublisherSectionPtrOutputWithContext(context.Background())
}

func (i *publisherSectionPtrType) ToPublisherSectionPtrOutputWithContext(ctx context.Context) PublisherSectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublisherSectionPtrOutput)
}

type PublisherSectionOutput struct{ *pulumi.OutputState }

func (PublisherSectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublisherSection)(nil)).Elem()
}

func (o PublisherSectionOutput) ToPublisherSectionOutput() PublisherSectionOutput {
	return o
}

func (o PublisherSectionOutput) ToPublisherSectionOutputWithContext(ctx context.Context) PublisherSectionOutput {
	return o
}

func (o PublisherSectionOutput) ToPublisherSectionPtrOutput() PublisherSectionPtrOutput {
	return o.ToPublisherSectionPtrOutputWithContext(context.Background())
}

func (o PublisherSectionOutput) ToPublisherSectionPtrOutputWithContext(ctx context.Context) PublisherSectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublisherSection) *PublisherSection {
		return &v
	}).(PublisherSectionPtrOutput)
}

func (o PublisherSectionOutput) DownloadPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublisherSection) *string { return v.DownloadPage }).(pulumi.StringPtrOutput)
}

func (o PublisherSectionOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublisherSection) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

func (o PublisherSectionOutput) RetailPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublisherSection) *string { return v.RetailPrice }).(pulumi.StringPtrOutput)
}

func (o PublisherSectionOutput) SupportEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublisherSection) *string { return v.SupportEmail }).(pulumi.StringPtrOutput)
}

func (o PublisherSectionOutput) Website() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublisherSection) *string { return v.Website }).(pulumi.StringPtrOutput)
}

type PublisherSectionPtrOutput struct{ *pulumi.OutputState }

func (PublisherSectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublisherSection)(nil)).Elem()
}

func (o PublisherSectionPtrOutput) ToPublisherSectionPtrOutput() PublisherSectionPtrOutput {
	return o
}

func (o PublisherSectionPtrOutput) ToPublisherSectionPtrOutputWithContext(ctx context.Context) PublisherSectionPtrOutput {
	return o
}

func (o PublisherSectionPtrOutput) Elem() PublisherSectionOutput {
	return o.ApplyT(func(v *PublisherSection) PublisherSection {
		if v != nil {
			return *v
		}
		var ret PublisherSection
		return ret
	}).(PublisherSectionOutput)
}

func (o PublisherSectionPtrOutput) DownloadPage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublisherSection) *string {
		if v == nil {
			return nil
		}
		return v.DownloadPage
	}).(pulumi.StringPtrOutput)
}

func (o PublisherSectionPtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublisherSection) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

func (o PublisherSectionPtrOutput) RetailPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublisherSection) *string {
		if v == nil {
			return nil
		}
		return v.RetailPrice
	}).(pulumi.StringPtrOutput)
}

func (o PublisherSectionPtrOutput) SupportEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublisherSection) *string {
		if v == nil {
			return nil
		}
		return v.SupportEmail
	}).(pulumi.StringPtrOutput)
}

func (o PublisherSectionPtrOutput) Website() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublisherSection) *string {
		if v == nil {
			return nil
		}
		return v.Website
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerSectionInput)(nil)).Elem(), CustomerSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerSectionPtrInput)(nil)).Elem(), CustomerSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrderSectionInput)(nil)).Elem(), OrderSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrderSectionPtrInput)(nil)).Elem(), OrderSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublisherSectionInput)(nil)).Elem(), PublisherSectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublisherSectionPtrInput)(nil)).Elem(), PublisherSectionArgs{})
	pulumi.RegisterOutputType(CustomerSectionOutput{})
	pulumi.RegisterOutputType(CustomerSectionPtrOutput{})
	pulumi.RegisterOutputType(OrderSectionOutput{})
	pulumi.RegisterOutputType(OrderSectionPtrOutput{})
	pulumi.RegisterOutputType(PublisherSectionOutput{})
	pulumi.RegisterOutputType(PublisherSectionPtrOutput{})
}
