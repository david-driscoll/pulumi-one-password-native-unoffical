// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function inject(args: InjectArgs, opts?: pulumi.InvokeOptions): Promise<InjectResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("one-password-native-unofficial:index:Inject", {
        "template": args.template,
    }, opts);
}

export interface InjectArgs {
    /**
     * The template that you want transformed with secrets
     */
    template: string;
}

/**
 * The result template with secrets replaced
 */
export interface InjectResult {
    readonly result: string;
}

export function injectOutput(args: InjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<InjectResult> {
    return pulumi.output(args).apply(a => inject(a, opts))
}

export interface InjectOutputArgs {
    /**
     * The template that you want transformed with secrets
     */
    template: pulumi.Input<string>;
}
